{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vp789\\\\Desktop\\\\Work_Project\\\\Spark-Banking-System\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"bulma/css/bulma.min.css\";\nimport logo from \"./favicon.ico\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { BeatLoader } from \"react-spinners\";\nimport axios from \"axios\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Components/Home\";\nimport { Footer } from \"./Components/Footer.js\";\nimport { CustomersDetails } from \"./Components/CustomersDetails\";\nimport { TransactionHistory } from \"./Components/TransactionHistory\";\nimport { TransferAmount } from \"./Components/TransferAmount\";\nimport { CustomerDetail } from \"./Components/CustomerDetail\";\nimport { About } from \"./Components/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //customersDetails\n  const [customersDetails, setCustomersDetails] = useState([]); // loader\n\n  const [Customerloading, setCustomerLoading] = useState(false);\n  const [transactionloading, setTransactionLoading] = useState(false); //fetching the customersDetails\n\n  useEffect(() => {\n    async function fetchCustomersDetails() {\n      try {\n        const data = await axios.get(process.env.React_App_API_KEY + \"/customers\");\n        setCustomersDetails(data.data);\n        setCustomerLoading(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    fetchCustomersDetails();\n  }, [customersDetails]); //transactionDetails\n\n  const [transactionDetails, setTransactionDetails] = useState([]); //fetching the transaction details\n\n  useEffect(() => {\n    async function fetchTransactionDetails() {\n      try {\n        const transactionData = await axios.get(process.env.React_App_API_KEY + \"/transactions\");\n        setTransactionDetails(transactionData.data);\n        setTransactionLoading(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    fetchTransactionDetails();\n  }, [transactionDetails]); // transfer parameters\n\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [amount, setAmount] = useState(\"\"); // Transfer event handler\n\n  const handleTransfer = async e => {\n    e.preventDefault();\n\n    if (to && from && amount > 0 && to !== from) {\n      var processes = document.querySelector(\"#transfer\");\n      processes.classList.add(\"is-loading\");\n      const data = {\n        from: parseInt(from),\n        to: parseInt(to),\n        amount: parseInt(amount)\n      };\n\n      try {\n        const transfer = await axios.put(process.env.React_App_API_KEY + `/customers/${data.from}&${data.to}`, {\n          amount: data.amount\n        });\n\n        if (transfer.status === 200 && !transfer.data.message) {\n          const response = await axios.post(process.env.React_App_API_KEY + \"/transactions\", data);\n\n          if (response.status === 200) {\n            processes.classList.remove(\"is-loading\");\n            alert(\" Transfer Done Successfully !!\");\n          } else {\n            processes.classList.remove(\"is-loading\");\n            alert(\" Transfer Failed, Try again!!\");\n          }\n        } else {\n          processes.classList.remove(\"is-loading\");\n          alert(transfer.data.message + \" !!\");\n        }\n      } catch (err) {\n        processes.classList.remove(\"is-loading\");\n        alert(\" Internal Error occurred, Try again after few minutes!!\");\n      }\n    } else {\n      alert(\"Invalid Amount. Please try!!\");\n    }\n\n    setFrom(\"\");\n    setTo(\"\");\n    setAmount(\"\");\n  }; // customer variables\n\n\n  const [currentCustomer, setCurrentCustomer] = useState(\"\"); // transfer state\n\n  const [transfer, setTransfer] = useState(\"Transfer From\");\n  useEffect(() => {\n    if (transfer !== \"Transfer From\") {\n      setFrom(transfer);\n    }\n  }, [transfer]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HashRouter, {\n      children: [\" \", 1 === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          top: \"40vh\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(BeatLoader, {\n            loading: true,\n            color: \"orange\",\n            size: 48\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/customs-details\",\n            children: [/*#__PURE__*/_jsxDEV(CustomersDetails, {\n              customersDetails: customersDetails,\n              setCurrentCustomer: setCurrentCustomer,\n              currentCustomer: currentCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/transaction-statements\",\n            children: [/*#__PURE__*/_jsxDEV(TransactionHistory, {\n              transactionDetails: transactionDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/transfer-amount\",\n            children: [/*#__PURE__*/_jsxDEV(TransferAmount, {\n              customersDetails: customersDetails,\n              to: to,\n              from: from,\n              setTo: setTo,\n              setAmount: setAmount,\n              setFrom: setFrom,\n              amount: amount,\n              handleTransfer: handleTransfer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/customer-details\",\n            children: [/*#__PURE__*/_jsxDEV(CustomerDetail, {\n              customersDetails: customersDetails,\n              currentCustomer: currentCustomer,\n              transactionDetails: transactionDetails,\n              setTransfer: setTransfer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true);\n}\n\n_s(App, \"it0PiaEqsjgT65MOdYyuqiA+RKE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vp789/Desktop/Work_Project/Spark-Banking-System/src/App.js"],"names":["logo","useState","useEffect","HashRouter","Switch","Route","BeatLoader","axios","Header","Home","Footer","CustomersDetails","TransactionHistory","TransferAmount","CustomerDetail","About","App","customersDetails","setCustomersDetails","Customerloading","setCustomerLoading","transactionloading","setTransactionLoading","fetchCustomersDetails","data","get","process","env","React_App_API_KEY","err","console","log","transactionDetails","setTransactionDetails","fetchTransactionDetails","transactionData","from","setFrom","to","setTo","amount","setAmount","handleTransfer","e","preventDefault","processes","document","querySelector","classList","add","parseInt","transfer","put","status","message","response","post","remove","alert","currentCustomer","setCurrentCustomer","setTransfer","position","justifyContent","alignItems","top","display","flexDirection"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport \"bulma/css/bulma.min.css\";\r\nimport logo from \"./favicon.ico\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { BeatLoader } from \"react-spinners\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Components/Home\";\r\nimport { Footer } from \"./Components/Footer.js\";\r\nimport { CustomersDetails } from \"./Components/CustomersDetails\";\r\nimport { TransactionHistory } from \"./Components/TransactionHistory\";\r\nimport { TransferAmount } from \"./Components/TransferAmount\";\r\nimport { CustomerDetail } from \"./Components/CustomerDetail\";\r\nimport { About } from \"./Components/About\";\r\n\r\nfunction App() {\r\n    //customersDetails\r\n    const [customersDetails, setCustomersDetails] = useState([]);\r\n\r\n    // loader\r\n    const [Customerloading, setCustomerLoading] = useState(false);\r\n    const [transactionloading, setTransactionLoading] = useState(false);\r\n\r\n    //fetching the customersDetails\r\n    useEffect(() => {\r\n        async function fetchCustomersDetails() {\r\n            try {\r\n                const data = await axios.get(\r\n                    process.env.React_App_API_KEY + \"/customers\"\r\n                );\r\n                setCustomersDetails(data.data);\r\n                setCustomerLoading(true);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchCustomersDetails();\r\n    }, [customersDetails]);\r\n\r\n    //transactionDetails\r\n    const [transactionDetails, setTransactionDetails] = useState([]);\r\n\r\n    //fetching the transaction details\r\n    useEffect(() => {\r\n        async function fetchTransactionDetails() {\r\n            try {\r\n                const transactionData = await axios.get(\r\n                    process.env.React_App_API_KEY + \"/transactions\"\r\n                );\r\n                setTransactionDetails(transactionData.data);\r\n                setTransactionLoading(true);\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchTransactionDetails();\r\n    }, [transactionDetails]);\r\n\r\n    // transfer parameters\r\n    const [from, setFrom] = useState(\"\");\r\n    const [to, setTo] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    // Transfer event handler\r\n    const handleTransfer = async(e) => {\r\n        e.preventDefault();\r\n\r\n        if (to && from && amount > 0 && to !== from) {\r\n            var processes = document.querySelector(\"#transfer\");\r\n            processes.classList.add(\"is-loading\");\r\n\r\n            const data = {\r\n                from: parseInt(from),\r\n                to: parseInt(to),\r\n                amount: parseInt(amount),\r\n            };\r\n\r\n\r\n            try {\r\n                const transfer = await axios.put(\r\n                    process.env.React_App_API_KEY + `/customers/${data.from}&${data.to}`, {\r\n                        amount: data.amount,\r\n                    }\r\n                );\r\n                if (transfer.status === 200 && !transfer.data.message) {\r\n                    const response = await axios.post(\r\n                        process.env.React_App_API_KEY + \"/transactions\",\r\n                        data\r\n                    );\r\n                    if (response.status === 200) {\r\n                        processes.classList.remove(\"is-loading\");\r\n                        alert(\" Transfer Done Successfully !!\");\r\n                    } else {\r\n                        processes.classList.remove(\"is-loading\");\r\n                        alert(\" Transfer Failed, Try again!!\");\r\n                    }\r\n                } else {\r\n                    processes.classList.remove(\"is-loading\");\r\n                    alert(transfer.data.message + \" !!\");\r\n                }\r\n            } catch (err) {\r\n                processes.classList.remove(\"is-loading\");\r\n                alert(\" Internal Error occurred, Try again after few minutes!!\");\r\n            }\r\n        } else {\r\n            alert(\"Invalid Amount. Please try!!\");\r\n        }\r\n\r\n        setFrom(\"\");\r\n        setTo(\"\");\r\n        setAmount(\"\");\r\n    };\r\n\r\n    // customer variables\r\n    const [currentCustomer, setCurrentCustomer] = useState(\"\");\r\n\r\n    // transfer state\r\n    const [transfer, setTransfer] = useState(\"Transfer From\");\r\n\r\n    useEffect(() => {\r\n        if (transfer !== \"Transfer From\") {\r\n            setFrom(transfer);\r\n        }\r\n    }, [transfer]);\r\n\r\n    return ( <\r\n        >\r\n        <\r\n        HashRouter > {\r\n            1 === 1 ? ( <\r\n                div style = {\r\n                    {\r\n                        position: \"relative\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        top: \"40vh\",\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                    }\r\n                } >\r\n                <\r\n                img src = { logo }\r\n                alt = \"logo\" / >\r\n                <\r\n                div style = {\r\n                    { display: \"flex\" } } >\r\n                <\r\n                BeatLoader loading color = \"orange\"\r\n                size = { 48 }\r\n                /> <\r\n                /div> <\r\n                /div>\r\n            ) : ( <\r\n                >\r\n                <\r\n                Header / >\r\n                <\r\n                Switch >\r\n                <\r\n                Route exact path = \"/\" >\r\n                <\r\n                Home / >\r\n                <\r\n                /Route> <\r\n                Route exact path = \"/customs-details\" >\r\n                <\r\n                CustomersDetails customersDetails = { customersDetails }\r\n                setCurrentCustomer = { setCurrentCustomer }\r\n                currentCustomer = { currentCustomer }\r\n                /> <\r\n                /Route> <\r\n                Route exact path = \"/transaction-statements\" >\r\n                <\r\n                TransactionHistory transactionDetails = { transactionDetails }\r\n                /> <\r\n                /Route> <\r\n                Route exact path = \"/transfer-amount\" >\r\n                <\r\n                TransferAmount customersDetails = { customersDetails }\r\n                to = { to }\r\n                from = { from }\r\n                setTo = { setTo }\r\n                setAmount = { setAmount }\r\n                setFrom = { setFrom }\r\n                amount = { amount }\r\n                handleTransfer = { handleTransfer }\r\n                /> <\r\n                /Route> <\r\n                Route exact path = \"/customer-details\" >\r\n                <\r\n                CustomerDetail customersDetails = { customersDetails }\r\n                currentCustomer = { currentCustomer }\r\n                transactionDetails = { transactionDetails }\r\n                setTransfer = { setTransfer }\r\n                /> <\r\n                /Route> <\r\n                Route exact path = \"/about\" >\r\n                <\r\n                About / >\r\n                <\r\n                /Route> <\r\n                /Switch> <\r\n                Footer / >\r\n                <\r\n                />\r\n            )\r\n        } <\r\n        /HashRouter> <\r\n        />\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}