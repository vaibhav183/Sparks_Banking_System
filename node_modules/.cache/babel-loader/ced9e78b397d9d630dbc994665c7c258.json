{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vp789\\\\Desktop\\\\Work_Project\\\\Spark-Banking-System\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport \"bulma/css/bulma.min.css\";\nimport logo from \"./favicon.ico\";\nimport { useState, useEffect } from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport { BeatLoader, ScaleLoader, HashLoader } from \"react-spinners\";\nimport axios from \"axios\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Components/Home\";\nimport { Footer } from \"./Components/Footer.js\";\nimport { CustomersDetails } from \"./Components/CustomersDetails\";\nimport { TransactionHistory } from \"./Components/TransactionHistory\";\nimport { TransferAmount } from \"./Components/TransferAmount\";\nimport { CustomerDetail } from \"./Components/CustomerDetail\";\nimport { About } from \"./Components/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //customersDetails\n  const [customersDetails, setCustomersDetails] = useState([]); // loader\n\n  const [Customerloading, setCustomerLoading] = useState(false);\n  const [transactionloading, setTransactionLoading] = useState(false); //fetching the customersDetails\n\n  useEffect(() => {\n    async function fetchCustomersDetails() {\n      try {\n        const data = await axios.get(process.env.React_App_API_KEY + \"/customers\");\n        setCustomersDetails(data.data);\n        setCustomerLoading(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    fetchCustomersDetails();\n  }, [customersDetails]); //transactionDetails\n\n  const [transactionDetails, setTransactionDetails] = useState([]); //fetching the transaction details\n\n  useEffect(() => {\n    async function fetchTransactionDetails() {\n      try {\n        const transactionData = await axios.get(process.env.React_App_API_KEY + \"/transactions\");\n        setTransactionDetails(transactionData.data);\n        setTransactionLoading(true);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n    fetchTransactionDetails();\n  }, [transactionDetails]); // transfer parameters\n\n  const [from, setFrom] = useState(\"\");\n  const [to, setTo] = useState(\"\");\n  const [amount, setAmount] = useState(\"\"); // Transfer event handler\n\n  const handleTransfer = async e => {\n    e.preventDefault();\n\n    if (to && from && amount > 0 && to !== from) {\n      var processes = document.querySelector(\"#transfer\");\n      processes.classList.add(\"is-loading\");\n      const data = {\n        from: parseInt(from),\n        to: parseInt(to),\n        amount: parseInt(amount)\n      };\n\n      try {\n        const transfer = await axios.put(process.env.React_App_API_KEY + `/customers/${data.from}&${data.to}`, {\n          amount: data.amount\n        });\n\n        if (transfer.status === 200 && !transfer.data.message) {\n          const response = await axios.post(process.env.React_App_API_KEY + \"/transactions\", data);\n\n          if (response.status === 200) {\n            processes.classList.remove(\"is-loading\");\n            alert(\" Transfer Done Successfully !!\");\n          } else {\n            processes.classList.remove(\"is-loading\");\n            alert(\" Transfer Failed, Try again!!\");\n          }\n        } else {\n          processes.classList.remove(\"is-loading\");\n          alert(transfer.data.message + \" !!\");\n        }\n      } catch (err) {\n        processes.classList.remove(\"is-loading\");\n        alert(\" Internal Error occurred, Try again after few minutes!!\");\n      }\n    } else {\n      alert(\"Invalid Amount. Please try!!\");\n    }\n\n    setFrom(\"\");\n    setTo(\"\");\n    setAmount(\"\");\n  }; // customer variables\n\n\n  const [currentCustomer, setCurrentCustomer] = useState(\"\"); // transfer state\n\n  const [transfer, setTransfer] = useState(\"Transfer From\");\n  useEffect(() => {\n    if (transfer !== \"Transfer From\") {\n      setFrom(transfer);\n    }\n  }, [transfer]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(HashRouter, {\n      children: !transactionloading && !Customerloading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"relative\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            top: \"40vh\",\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              height: \"2em\",\n              width: \"2em\"\n            },\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: /*#__PURE__*/_jsxDEV(HashLoader, {\n              loading: true,\n              color: \"orange\",\n              size: 48\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/customs-details\",\n            children: /*#__PURE__*/_jsxDEV(CustomersDetails, {\n              customersDetails: customersDetails,\n              setCurrentCustomer: setCurrentCustomer,\n              currentCustomer: currentCustomer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/transaction-statements\",\n            children: /*#__PURE__*/_jsxDEV(TransactionHistory, {\n              transactionDetails: transactionDetails\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/transfer-amount\",\n            children: /*#__PURE__*/_jsxDEV(TransferAmount, {\n              customersDetails: customersDetails,\n              to: to,\n              from: from,\n              setTo: setTo,\n              setAmount: setAmount,\n              setFrom: setFrom,\n              amount: amount,\n              handleTransfer: handleTransfer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/customer-details\",\n            children: /*#__PURE__*/_jsxDEV(CustomerDetail, {\n              customersDetails: customersDetails,\n              currentCustomer: currentCustomer,\n              transactionDetails: transactionDetails,\n              setTransfer: setTransfer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/about\",\n            children: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"it0PiaEqsjgT65MOdYyuqiA+RKE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/vp789/Desktop/Work_Project/Spark-Banking-System/src/App.js"],"names":["logo","useState","useEffect","HashRouter","Switch","Route","BeatLoader","ScaleLoader","HashLoader","axios","Header","Home","Footer","CustomersDetails","TransactionHistory","TransferAmount","CustomerDetail","About","App","customersDetails","setCustomersDetails","Customerloading","setCustomerLoading","transactionloading","setTransactionLoading","fetchCustomersDetails","data","get","process","env","React_App_API_KEY","err","console","log","transactionDetails","setTransactionDetails","fetchTransactionDetails","transactionData","from","setFrom","to","setTo","amount","setAmount","handleTransfer","e","preventDefault","processes","document","querySelector","classList","add","parseInt","transfer","put","status","message","response","post","remove","alert","currentCustomer","setCurrentCustomer","setTransfer","position","justifyContent","alignItems","top","display","flexDirection","height","width"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport \"bulma/css/bulma.min.css\";\r\nimport logo from \"./favicon.ico\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport { BeatLoader,ScaleLoader,HashLoader } from \"react-spinners\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Components/Home\";\r\nimport { Footer } from \"./Components/Footer.js\";\r\nimport { CustomersDetails } from \"./Components/CustomersDetails\";\r\nimport { TransactionHistory } from \"./Components/TransactionHistory\";\r\nimport { TransferAmount } from \"./Components/TransferAmount\";\r\nimport { CustomerDetail } from \"./Components/CustomerDetail\";\r\nimport { About } from \"./Components/About\";\r\n\r\nfunction App() {\r\n  //customersDetails\r\n  const [customersDetails, setCustomersDetails] = useState([]);\r\n\r\n  // loader\r\n  const [Customerloading, setCustomerLoading] = useState(false);\r\n  const [transactionloading, setTransactionLoading] = useState(false);\r\n\r\n  //fetching the customersDetails\r\n  useEffect(() => {\r\n    async function fetchCustomersDetails() {\r\n      try {\r\n        const data = await axios.get(\r\n          process.env.React_App_API_KEY+\"/customers\"\r\n        );\r\n        setCustomersDetails(data.data);\r\n        setCustomerLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchCustomersDetails();\r\n  }, [customersDetails]);\r\n\r\n  //transactionDetails\r\n  const [transactionDetails, setTransactionDetails] = useState([]);\r\n\r\n  //fetching the transaction details\r\n  useEffect(() => {\r\n    async function fetchTransactionDetails() {\r\n      try {\r\n        const transactionData = await axios.get(\r\n          process.env.React_App_API_KEY +\"/transactions\"\r\n        );\r\n        setTransactionDetails(transactionData.data);\r\n        setTransactionLoading(true);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchTransactionDetails();\r\n  }, [transactionDetails]);\r\n\r\n  // transfer parameters\r\n  const [from, setFrom] = useState(\"\");\r\n  const [to, setTo] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  // Transfer event handler\r\n  const handleTransfer = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (to && from && amount > 0 && to !== from) {\r\n      var processes = document.querySelector(\"#transfer\");\r\n      processes.classList.add(\"is-loading\");\r\n\r\n      const data = {\r\n        from: parseInt(from),\r\n        to: parseInt(to),\r\n        amount: parseInt(amount),\r\n      };\r\n\r\n\r\n      try {\r\n        const transfer = await axios.put(\r\n          process.env.React_App_API_KEY+`/customers/${data.from}&${data.to}`,\r\n          {\r\n            amount: data.amount,\r\n          }\r\n        );\r\n        if (transfer.status === 200 && !transfer.data.message) {\r\n          const response = await axios.post(\r\n            process.env.React_App_API_KEY+\"/transactions\",\r\n            data\r\n          );\r\n          if (response.status === 200) {\r\n            processes.classList.remove(\"is-loading\");\r\n            alert(\" Transfer Done Successfully !!\");\r\n          } else {\r\n            processes.classList.remove(\"is-loading\");\r\n            alert(\" Transfer Failed, Try again!!\");\r\n          }\r\n        } else {\r\n          processes.classList.remove(\"is-loading\");\r\n          alert(transfer.data.message + \" !!\");\r\n        }\r\n      } catch (err) {\r\n        processes.classList.remove(\"is-loading\");\r\n        alert(\" Internal Error occurred, Try again after few minutes!!\");\r\n      }\r\n    } else {\r\n      alert(\"Invalid Amount. Please try!!\");\r\n    }\r\n\r\n    setFrom(\"\");\r\n    setTo(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  // customer variables\r\n  const [currentCustomer, setCurrentCustomer] = useState(\"\");\r\n\r\n  // transfer state\r\n  const [transfer, setTransfer] = useState(\"Transfer From\");\r\n\r\n  useEffect(() => {\r\n    if (transfer !== \"Transfer From\") {\r\n      setFrom(transfer);\r\n    }\r\n  }, [transfer]);\r\n\r\n  return (\r\n    <>\r\n      <HashRouter>\r\n        {!transactionloading && !Customerloading ? (\r\n          <>\r\n            <div\r\n              style={{\r\n                position: \"relative\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                top: \"40vh\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n              }}\r\n            >\r\n              <img style={{height:\"2em\",width:\"2em\"}} src={logo} alt=\"logo\" />\r\n              <div style={{ display: \"flex\" }}>\r\n                <HashLoader loading color=\"orange\" size={48} />\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Header />\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/customs-details\">\r\n                <CustomersDetails\r\n                  customersDetails={customersDetails}\r\n                  setCurrentCustomer={setCurrentCustomer}\r\n                  currentCustomer={currentCustomer}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/transaction-statements\">\r\n                <TransactionHistory\r\n                  transactionDetails={transactionDetails}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/transfer-amount\">\r\n                <TransferAmount\r\n                  customersDetails={customersDetails}\r\n                  to={to}\r\n                  from={from}\r\n                  setTo={setTo}\r\n                  setAmount={setAmount}\r\n                  setFrom={setFrom}\r\n                  amount={amount}\r\n                  handleTransfer={handleTransfer}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/customer-details\">\r\n                <CustomerDetail\r\n                  customersDetails={customersDetails}\r\n                  currentCustomer={currentCustomer}\r\n                  transactionDetails={transactionDetails}\r\n                  setTransfer={setTransfer}\r\n                />\r\n              </Route>\r\n              <Route exact path=\"/about\">\r\n                <About />\r\n              </Route>\r\n            </Switch>\r\n            <Footer />\r\n          </>\r\n        )}\r\n      </HashRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}